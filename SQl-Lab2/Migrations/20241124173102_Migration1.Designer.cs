// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SQl_Lab2.Models;

#nullable disable

namespace SQl_Lab2.Migrations
{
    [DbContext(typeof(Lab1DbContext))]
    [Migration("20241124173102_Migration1")]
    partial class Migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SQl_Lab2.Models.Butiker", b =>
                {
                    b.Property<int>("ButikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ButikId"));

                    b.Property<string>("ButiksNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gata")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GatuNummer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ButikId");

                    b.ToTable("Butikers");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Böcker", b =>
                {
                    b.Property<string>("Isbn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FörfattareId")
                        .HasColumnType("int");

                    b.Property<int>("FörlagId")
                        .HasColumnType("int");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Språk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("UtgivningsDatum")
                        .HasColumnType("date");

                    b.HasKey("Isbn");

                    b.HasIndex("FörfattareId");

                    b.HasIndex("FörlagId");

                    b.ToTable("Böckers");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Författare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EfterNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("FödelseDatum")
                        .HasColumnType("date");

                    b.Property<string>("FörNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Författares");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Förlag", b =>
                {
                    b.Property<int>("FörlagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FörlagId"));

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FörlagId");

                    b.ToTable("Förlags");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Kunder", b =>
                {
                    b.Property<int>("KundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundId"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EfterNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FörNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nummer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KundId");

                    b.ToTable("Kunders");
                });

            modelBuilder.Entity("SQl_Lab2.Models.LagerSaldo", b =>
                {
                    b.Property<int>("LagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LagerId"));

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<string>("BokIsbn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ButikId")
                        .HasColumnType("int");

                    b.Property<string>("Isbn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LagerId");

                    b.HasIndex("BokIsbn");

                    b.HasIndex("ButikId");

                    b.ToTable("LagerSaldos");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Böcker", b =>
                {
                    b.HasOne("SQl_Lab2.Models.Författare", "Författare")
                        .WithMany("Böckers")
                        .HasForeignKey("FörfattareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SQl_Lab2.Models.Förlag", "Förlag")
                        .WithMany("Böckers")
                        .HasForeignKey("FörlagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Författare");

                    b.Navigation("Förlag");
                });

            modelBuilder.Entity("SQl_Lab2.Models.LagerSaldo", b =>
                {
                    b.HasOne("SQl_Lab2.Models.Böcker", "Bok")
                        .WithMany()
                        .HasForeignKey("BokIsbn");

                    b.HasOne("SQl_Lab2.Models.Butiker", "Butik")
                        .WithMany("LagerSaldos")
                        .HasForeignKey("ButikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bok");

                    b.Navigation("Butik");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Butiker", b =>
                {
                    b.Navigation("LagerSaldos");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Författare", b =>
                {
                    b.Navigation("Böckers");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Förlag", b =>
                {
                    b.Navigation("Böckers");
                });
#pragma warning restore 612, 618
        }
    }
}
