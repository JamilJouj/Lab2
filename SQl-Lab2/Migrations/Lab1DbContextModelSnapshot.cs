// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SQl_Lab2.Models;

#nullable disable

namespace SQl_Lab2.Migrations
{
    [DbContext(typeof(Lab1DbContext))]
    partial class Lab1DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SQl_Lab2.Models.Butiker", b =>
                {
                    b.Property<int>("ButikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ButikID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ButikId"));

                    b.Property<string>("ButiksNamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gata")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GatuNummer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ButikId")
                        .HasName("PK__Butiker__B5D66BFA498EDF40");

                    b.ToTable("Butiker", (string)null);
                });

            modelBuilder.Entity("SQl_Lab2.Models.Böcker", b =>
                {
                    b.Property<string>("Isbn")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ISBN");

                    b.Property<int>("FörfattareId")
                        .HasColumnType("int")
                        .HasColumnName("FörfattareID");

                    b.Property<int>("FörlagId")
                        .HasColumnType("int")
                        .HasColumnName("FörlagID");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Språk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("UtgivningsDatum")
                        .HasColumnType("date");

                    b.HasKey("Isbn")
                        .HasName("PK__Böcker__447D36EB2B545335");

                    b.HasIndex("FörfattareId");

                    b.HasIndex("FörlagId");

                    b.ToTable("Böcker", (string)null);
                });

            modelBuilder.Entity("SQl_Lab2.Models.Författare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EfterNamn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly?>("FödelseDatum")
                        .HasColumnType("date");

                    b.Property<string>("FörNamn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__Författa__3214EC27297E678D");

                    b.ToTable("Författare", (string)null);
                });

            modelBuilder.Entity("SQl_Lab2.Models.Förlag", b =>
                {
                    b.Property<int>("FörlagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FörlagID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FörlagId"));

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FörlagId")
                        .HasName("PK__Förlag__DE6A852C74E32959");

                    b.ToTable("Förlag", (string)null);
                });

            modelBuilder.Entity("SQl_Lab2.Models.Kunder", b =>
                {
                    b.Property<int>("KundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KundID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundId"));

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EfterNamn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FörNamn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nummer")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("KundId")
                        .HasName("PK__Kunder__F2B5DEAC835A627F");

                    b.ToTable("Kunder", (string)null);
                });

            modelBuilder.Entity("SQl_Lab2.Models.LagerSaldo", b =>
                {
                    b.Property<int>("LagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LagerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LagerId"));

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<string>("BokIsbn")
                        .HasColumnType("varchar(13)");

                    b.Property<int>("ButikId")
                        .HasColumnType("int")
                        .HasColumnName("ButikID");

                    b.Property<string>("Isbn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ISBN");

                    b.HasKey("LagerId")
                        .HasName("PK__LagerSal__23FED8A917AE06D1");

                    b.HasIndex("BokIsbn");

                    b.HasIndex("ButikId");

                    b.ToTable("LagerSaldo", (string)null);
                });

            modelBuilder.Entity("SQl_Lab2.Models.Böcker", b =>
                {
                    b.HasOne("SQl_Lab2.Models.Författare", "Författare")
                        .WithMany("Böckers")
                        .HasForeignKey("FörfattareId")
                        .IsRequired()
                        .HasConstraintName("FK__Böcker__Författa__29221CFB");

                    b.HasOne("SQl_Lab2.Models.Förlag", "Förlag")
                        .WithMany("Böckers")
                        .HasForeignKey("FörlagId")
                        .IsRequired()
                        .HasConstraintName("FK__Böcker__FörlagID__2A164134");

                    b.Navigation("Författare");

                    b.Navigation("Förlag");
                });

            modelBuilder.Entity("SQl_Lab2.Models.LagerSaldo", b =>
                {
                    b.HasOne("SQl_Lab2.Models.Böcker", "Bok")
                        .WithMany()
                        .HasForeignKey("BokIsbn");

                    b.HasOne("SQl_Lab2.Models.Butiker", "Butik")
                        .WithMany("LagerSaldos")
                        .HasForeignKey("ButikId")
                        .IsRequired()
                        .HasConstraintName("FK__LagerSald__Butik__76969D2E");

                    b.Navigation("Bok");

                    b.Navigation("Butik");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Butiker", b =>
                {
                    b.Navigation("LagerSaldos");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Författare", b =>
                {
                    b.Navigation("Böckers");
                });

            modelBuilder.Entity("SQl_Lab2.Models.Förlag", b =>
                {
                    b.Navigation("Böckers");
                });
#pragma warning restore 612, 618
        }
    }
}
